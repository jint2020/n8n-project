services:
  n8n:
    image: docker.n8n.io/n8nio/n8n
    container_name: n8n
    restart: unless-stopped
    ports:
      - "${N8N_PORT:-5678}:5678"
    environment:
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE:-Asia/Shanghai}
      - TZ=${TZ:-Asia/Shanghai}
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=${N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS:-true}
      - N8N_RUNNERS_ENABLED=${N8N_RUNNERS_ENABLED:-true}
      # PostgreSQL数据库配置
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB:-n8n}
      - DB_POSTGRESDB_USER=${POSTGRES_USER:-n8n}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD:-n8n}
      # 加密密钥（请更改为您自己的密钥）
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY:-your-encryption-key-change-this}
      # 基本认证（推荐启用）
      - N8N_BASIC_AUTH_ACTIVE=${N8N_BASIC_AUTH_ACTIVE:-true}
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER:-admin}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD:-admin_password}
      # Webhook URL（如果需要外部访问）
      - WEBHOOK_URL=${WEBHOOK_URL}
      # 其他配置
      - N8N_METRICS=${N8N_METRICS:-false}
      - N8N_LOG_LEVEL=${N8N_LOG_LEVEL:-info}
    volumes:
      - n8n_data:/home/node/.n8n  # 使用Docker卷避免权限问题
    depends_on:
      - postgres
    networks:
      - n8n_network

  postgres:
    image: postgres:15
    container_name: n8n_postgres
    restart: unless-stopped
    ports:
      - "${POSTGRES_PORT:-5432}:5432"  # 暴露PostgreSQL端口供本地访问
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-n8n}
      - POSTGRES_USER=${POSTGRES_USER:-n8n}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-n8n}
      - POSTGRES_INITDB_ARGS="--encoding=UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data  # 使用Docker卷避免权限问题
    networks:
      - n8n_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U n8n -d n8n"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  n8n_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  n8n_data:
    driver: local
